@page "/Index"

@inject IShiftData _shiftDb
@inject IWorkerData _workerDb
<head>
	<link href="css/index.css" rel="stylesheet" />
</head>

<body>
	<h1>Hello World!</h1>

	<div class="grid-container-7-column">
		<!-- Row 1 (titles) -->
		<div class="grid-item-default">Monday</div>
		<div class="grid-item-default">Tuesday</div>
		<div class="grid-item-default">Wednesday</div>
		<div class="grid-item-default">Thursday</div>
		<div class="grid-item-default">Friday</div>
		<div class="grid-item-default">Saturday</div>
		<div class="grid-item-default">Sunday</div>

		<!-- Row 2 (first data cell) -->
		<div class="grid-item-default">. </div>
		<div class="grid-item-default">. </div>
		<div class="grid-item-default">. </div>
		<div class="grid-item-default">. </div>
		<div class="grid-item-default">. </div>
		<div class="grid-item-default">. </div>
		<div class="grid-item-default">. </div>

		@foreach (ShiftModel s in workersShifts)
		{
			<div class="grid-item-default">
				<h1>@s.WorkerId.ToString()</h1>
				<p>@s.StartTime @s.EndTime</p>
			</div>
		}
	</div>

	<button @onclick="AddShiftsFromDb">Add Strings</button>
</body>

@code{
	List<ShiftModel> shifts = new();
	List<ShiftModel> workersShifts = new();

	async Task AddShiftsFromDb()
	{
		shifts = await _shiftDb.GetShiftsAsync();
		workersShifts = await _shiftDb.GetShiftsForWorkerAsync(2);


	}

}